# Задача 1.

class FlatIterator:
    def __init__(self, list_of_list):
        self._data = list_of_list
        self._outer = 0
        self._inner = 0

    def __iter__(self):
        return self

    def __next__(self):
        while self._outer < len(self._data):
            sub = self._data[self._outer]

            if self._inner < len(sub):
                item = sub[self._inner]
                self._inner += 1
                return item

            self._outer += 1
            self._inner = 0

        raise StopIteration


def test_1():
    list_of_lists_1 = [
        ['a', 'b', 'c'],
        ['d', 'e', 'f', 'h', False],
        [1, 2, None]
    ]

    for flat_iterator_item, check_item in zip(
        FlatIterator(list_of_lists_1),
        ['a', 'b', 'c', 'd', 'e', 'f', 'h', False, 1, 2, None]
    ):
        assert flat_iterator_item == check_item

    assert list(FlatIterator(list_of_lists_1)) == \
           ['a', 'b', 'c', 'd', 'e', 'f', 'h', False, 1, 2, None]


if __name__ == '__main__':
    test_1()
    print('Тест отработан без ошибок')
